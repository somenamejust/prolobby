const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');

const app = express();
const PORT = 5000; // –ü–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–µ—Ä

const authRoutes = require('./routes/auth');
const lobbyRoutes = require('./routes/lobbies')

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
// 'mongodb://localhost:27017/prolobby' - —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã.
// 'prolobby' - —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –æ–Ω–æ —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
mongoose.connect('mongodb://localhost:27017/prolobby', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log('–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB'))
.catch(err => console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err));

// --- Middlewares ---
app.use(cors()); // 2. "–ò—Å–ø–æ–ª—å–∑—É–µ–º" cors. –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –î–û –º–∞—Ä—à—Ä—É—Ç–æ–≤.
app.use(express.json()); // –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É –ø–æ–Ω–∏–º–∞—Ç—å JSON –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö

// --- üëá –ù–û–í–´–ô –ë–õ–û–ö: MIDDLEWARE –î–õ–Ø –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø üëá ---
app.use((req, res, next) => {
  console.log(`[${new Date().toLocaleTimeString()}] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: ${req.method} ${req.originalUrl}`);
  next(); // –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ –ø–æ —Ü–µ–ø–æ—á–∫–µ
});

app.use('/api/auth', authRoutes);
app.use('/api/lobbies', lobbyRoutes);

app.get('/', (req, res) => {
  res.send('–ë—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã –æ–Ω –Ω–∞—á–∞–ª "—Å–ª—É—à–∞—Ç—å" –∑–∞–ø—Ä–æ—Å—ã
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});