// src/pages/Friends.jsx
import React, { useState, useMemo, useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import axios from 'axios'; // üéØ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º axios –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
import UserProfileModal from '../components/UserProfileModal';

export default function Friends() {
  // --- 1. –û–ë–ù–û–í–õ–Ø–ï–ú –°–û–°–¢–û–Ø–ù–ò–ï –ò –ö–û–ù–¢–ï–ö–°–¢ ---
  // –£–±–∏—Ä–∞–µ–º allUsers, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞
  const { user, allUsers, sendFriendRequest, acceptFriendRequest, declineFriendRequest, removeFriend } = useAuth();
  
  const [activeTab, setActiveTab] = useState('friends');
  const [searchQuery, setSearchQuery] = useState('');
  const [modalUser, setModalUser] = useState(null);

  // üéØ –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
  const [searchResults, setSearchResults] = useState([]);
  const [isSearching, setIsSearching] = useState(false); // –î–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏

  const [friends, setFriends] = useState([]); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
  const [isLoading, setIsLoading] = useState(true);

  // --- 1. useEffect: –ó–ê–ì–†–£–ó–ö–ê –°–ü–ò–°–ö–ê –î–†–£–ó–ï–ô ---
  // –≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è user.friends (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏)
  useEffect(() => {
    const fetchFriends = async () => {
      if (!user?.friends || user.friends.length === 0) {
        setFriends([]);
        setIsLoading(false);
        return;
      }
      try {
        setIsLoading(true);
        const response = await axios.post('/api/users/by-ids', { ids: user.friends });
        setFriends(response.data);
      } catch (error) {
        console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π:", error);
      } finally {
        setIsLoading(false);
      }
    };
    fetchFriends();
  }, [user]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç user, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å –¥—Ä—É–∑–µ–π –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏

  // --- 2. useEffect: "–ñ–ò–í–û–ô" –ü–û–ò–°–ö –ß–ï–†–ï–ó API ---
  useEffect(() => {
    if (searchQuery.trim() === '') {
      setSearchResults([]);
      return;
    }

    setIsSearching(true);

    const delayDebounceFn = setTimeout(async () => {
      try {
        // --- üëá DIAGNOSTIC LOG HERE üëá ---
        console.log(`[–§—Ä–æ–Ω—Ç–µ–Ω–¥] –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å term='${searchQuery}'`);

        const response = await axios.get(`/api/users/search`, {
          params: { 
            term: searchQuery,
            currentUserId: user.id 
          }
        });
        setSearchResults(response.data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:", error);
      } finally {
        setIsSearching(false);
      }
    }, 500);

    return () => clearTimeout(delayDebounceFn);
  }, [searchQuery, user.id]);

  // --- 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å: —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π ---
  const displayedUsers = searchQuery.trim() ? searchResults : friends;

  const handleRemoveFriend = (friend) => {
    if (window.confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${friend.username} –∏–∑ –¥—Ä—É–∑–µ–π?`)) {
      removeFriend(friend);
    }
  };

  if (!user) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–µ–º–Ω—ã–º–∏ –∏–∑-–∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—Ä–∞–≤–æ–∫
    <>
      <UserProfileModal userToShow={modalUser} onClose={() => setModalUser(null)} />
      
      <div className="min-h-screen p-8">
        <div className="max-w-4xl mx-auto">
          <h1 className="text-3xl font-bold mb-6 text-white">–î—Ä—É–∑—å—è</h1>

          {/* --- –í–∫–ª–∞–¥–∫–∏ --- */}
          <div className="flex border-b border-gray-700 mb-6">
            <button 
              onClick={() => setActiveTab('friends')}
              className={`py-2 px-4 font-semibold transition-colors ${
                activeTab === 'friends' 
                  ? 'border-b-2 border-brand-blue text-brand-blue' 
                  : 'text-gray-400 hover:text-gray-200'
              }`}
            >
              –ú–æ–∏ –¥—Ä—É–∑—å—è
            </button>
            <button 
              onClick={() => setActiveTab('requests')}
              className={`py-2 px-4 font-semibold transition-colors relative ${
                activeTab === 'requests' 
                  ? 'border-b-2 border-brand-blue text-brand-blue' 
                  : 'text-gray-400 hover:text-gray-200'
              }`}
            >
              –ó–∞—è–≤–∫–∏ –≤ –¥—Ä—É–∑—å—è
              {(user.friendRequests?.length || 0) > 0 && (
                <span className="absolute top-1 right-1 flex h-4 w-4">
                  <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-brand-red opacity-75"></span>
                  <span className="relative inline-flex rounded-full h-4 w-4 bg-brand-red text-white text-xs justify-center items-center">
                    {(user.friendRequests?.length || 0)}
                  </span>
                </span>
              )}
            </button>
          </div>

          {/* --- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ "–ú–æ–∏ –¥—Ä—É–∑—å—è" --- */}
          {activeTab === 'friends' && (
            <div>
              <h2 className="text-2xl font-semibold mb-4 text-white">–ü–æ–∏—Å–∫ –∏ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π</h2>
              <input 
                type="text"
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –ª–æ–≥–∏–Ω—É –∏–ª–∏ ID..."
                className="w-full px-4 py-2 bg-dark-surface border border-gray-600 rounded-lg mb-6 text-gray-200 focus:ring-brand-blue focus:border-brand-blue"
              />
              <div className="space-y-3">
                {isLoading ? (
                  <p className="text-gray-500 text-center">Loading...</p>
                ) : displayedUsers.length > 0 ? (
                  // The .map function is an expression, it needs to be contained properly
                  displayedUsers.map(foundUser => {
                    if (foundUser.id === user.id) return null;
                    
                    const isFriend = (user.friends || []).includes(foundUser.id);
                    const hasSentRequest = (user.outgoingRequests || []).some(req => req.toUserId === foundUser.id);
                    const hasReceivedRequest = (user.friendRequests || []).some(req => req.fromUserId === foundUser.id);

                    return (
                      <div key={foundUser.id} className="flex items-center justify-between bg-dark-surface p-3 rounded-lg border border-gray-700">
                        <div className="flex items-center gap-3">
                          <img src={foundUser.avatarUrl} alt="–ê–≤–∞—Ç–∞—Ä" className="w-12 h-12 rounded-full" />
                          <div>
                            <p className="font-bold text-white">{foundUser.username}</p>
                            <p className="text-sm text-gray-400">{foundUser.email}</p>
                          </div>
                        </div>
                        <div>
                          {isFriend ? (
                            <button onClick={() => handleRemoveFriend(foundUser)} className="px-4 py-2 text-sm bg-brand-red hover:bg-red-400 text-white rounded-lg transition-colors">–£–¥–∞–ª–∏—Ç—å</button>
                          ) : hasSentRequest ? (
                            <button className="px-4 py-2 text-sm bg-gray-600 text-gray-300 rounded-lg cursor-not-allowed">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</button>
                          ) : hasReceivedRequest ? (
                            // --- üëá POTENTIAL BUG FIX HERE TOO üëá ---
                            // You were passing the whole request object, but acceptFriendRequest expects the request object from user.friendRequests.
                            // Let's find the correct request object to pass.
                            <button onClick={() => {
                                const request = user.friendRequests.find(req => req.fromUserId === foundUser.id);
                                acceptFriendRequest(request);
                            }} className="px-4 py-2 text-sm bg-teal-500 text-white rounded-lg hover:bg-teal-600">–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É</button>
                          ) : (
                            <button onClick={() => sendFriendRequest(foundUser)} className="px-4 py-2 text-sm bg-brand-green hover:bg-green-400 text-white rounded-lg transition-colors">–î–æ–±–∞–≤–∏—Ç—å</button>
                          )}
                        </div>
                      </div>
                    );
                  })
                ) : ( // <-- The syntax is now correct. The ternary continues after the .map() call.
                  <p className="text-gray-500 text-center">{searchQuery ? "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ." : "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π."}</p>
                )}
              </div>
            </div>
          )}

          {/* --- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ "–ó–∞—è–≤–∫–∏" --- */}
          {activeTab === 'requests' && (
            <div>
              <h2 className="text-2xl font-semibold mb-4 text-white">–í—Ö–æ–¥—è—â–∏–µ –∑–∞—è–≤–∫–∏</h2>
              <div className="space-y-3">
                {(user.friendRequests || []).length > 0 ? (
                  (user.friendRequests || []).map(request => (
                    <div key={request.fromUserId} className="flex items-center justify-between bg-dark-surface p-3 rounded-lg border border-gray-700">
                      <div className="flex items-center gap-3">
                        <img src={request.fromAvatarUrl} alt="–ê–≤–∞—Ç–∞—Ä" className="w-10 h-10 rounded-full" />
                        <p className="text-gray-300">–ó–∞—è–≤–∫–∞ –æ—Ç <span className="font-bold text-white">{request.fromUsername}</span></p>
                      </div>
                      <div className="flex gap-2">
                        <button onClick={() => acceptFriendRequest(request)} className="px-4 py-2 text-sm bg-brand-green hover:bg-green-400 text-white rounded-lg">–ü—Ä–∏–Ω—è—Ç—å</button>
                        <button onClick={() => declineFriendRequest(request)} className="px-4 py-2 text-sm bg-gray-600 hover:bg-gray-500 text-white rounded-lg">–û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
                      </div>
                    </div>
                  ))
                ) : (
                  <p className="text-gray-500">–ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫.</p>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </>
  );
}